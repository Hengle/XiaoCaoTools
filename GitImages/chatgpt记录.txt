问题收集:
1.正则表达式

2.已知两点绘制正弦曲线

3.编写简单Html

4.使用c#，如何获取文件夹内所有文件的路径？

5.1 使用unity开发游戏,如何截图当前屏幕?
5.2 如果是在安卓端,如何将图片保存到相册?

1.有一个字符串"这本书叫做《C#从入门到入土》..."，想截取"《"和"》"中间的字符串,如何写正则表达式呢?用C#实现

string input = "这本书叫做《C#从入门到入土》...";
string pattern = "《(.*?)》";
Match match = Regex.Match(input, pattern);
if (match.Success)
{
	Console.WriteLine(match.Groups[0].Value); //输出：《C#从入门到入土》
	Console.WriteLine(match.Groups[1].Value); //输出：C#从入门到入土
}



2.在三维空间中,过A、B两个点,绘制一条正弦弧线,如何用C#实现?
//由于绘制的曲线要在垂直方向上,所以只保留ScaleY
float x =(float)(xA + t * (xB - xA)); 
float y =(float)(yA + t * (yB - yA) + ScaleY* Math.Sin(omega*Mathf.PI * t));
float z =(float)(zA + t * (zB - zA));


格式化输出浮点：



3.如何写一个简单的html，带一个按钮,当点击按钮时，使用网络连接url获取图片并显示
//路径我找了有个测试

<!DOCTYPE html>
<html>
  <head>
    <title>My Page</title>
  </head>
  <body>
    <button id="submit-button">Get Image</button>
    <img id="image" />
    <script>
      document.getElementById("submit-button").addEventListener("click", function() {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", "https://i0.hdslb.com/bfs/face/8ff7ef6aa2e586c17b34ffc8db7d46a535750950.jpg@240w_240h_1c_1s.webp");
        xhr.responseType = "blob";
        xhr.onload = function() {
          var img = document.getElementById("image");
          img.src = URL.createObjectURL(xhr.response);};
xhr.send();
});
</script>
  </body>
</html>

4.使用c#，如何获取文件夹内所有文件的路径？
//获取, 但不包括子问价夹
string[] filePaths = Directory.GetFiles(@"C:\myfolder");
//包括子文件夹
string[] filePaths = Directory.GetFiles(@"C:\myfolder", "*", SearchOption.AllDirectories);
//包括子文件夹 并且 筛选.txt扩展名
string[] filePaths = Directory.GetFiles(@"C:\myfolder", "*.txt", SearchOption.AllDirectories);


5.使用unity开发游戏,如何截图当前屏幕?

public void CaptureScreenshot()
{
	string fileName = "Screenshot.png";
	string filePath = Path.Combine(Application.persistentDataPath, fileName);
	ScreenCapture.CaptureScreenshot(filePath);
}
或者
public void CaptureScreenshot()
{
	int width = Screen.width;
	int height = Screen.height;
	Texture2D texture = new Texture2D(width, height, TextureFormat.RGB24, false);
	texture.ReadPixels(new Rect(0, 0, width, height), 0, 0);
	texture.Apply();
	byte[] bytes = texture.EncodeToPNG();
	File.WriteAllBytes(Application.persistentDataPath + "/Screenshot.png", bytes);
}
{
using UnityEngine;
using System.IO;
public class SaveToAndroidGallery : MonoBehaviour
{
    public void SaveToGallery(string filePath)
    {
        #if UNITY_ANDROID
        AndroidJavaClass unityPlayer = new AndroidJavaClass("com.unity3d.player.UnityPlayer");
        AndroidJavaObject currentActivity = unityPlayer.GetStatic<AndroidJavaObject>("currentActivity");
        AndroidJavaClass mediaScanner = new AndroidJavaClass("android.media.MediaScannerConnection");
        AndroidJavaClass file = new AndroidJavaClass("java.io.File");

        AndroidJavaObject fileObject = new AndroidJavaObject("java.io.File", filePath);
        mediaScanner.CallStatic("scanFile", currentActivity, new object[2] { fileObject.Call<string>("getAbsolutePath"), "image/jpeg" }, null);

        #endif
    }
}	
}

